"""Initial commit

Revision ID: d830617bc3df
Revises: 
Create Date: 2025-07-11 13:11:58.505691

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = 'd830617bc3df'
down_revision: Union[str, Sequence[str], None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('Contributions')
    op.drop_table('Membership_reasons')
    op.drop_table('Contribution_type')
    op.drop_table('Course')
    op.drop_table('Membership_granted')
    op.alter_column('Enrollments', 'tg_id',
               existing_type=sa.TEXT(),
               type_=sa.String(),
               existing_nullable=False)
    op.drop_constraint(op.f('Unique_tg_id_per_course'), 'Enrollments', type_='unique')
    op.alter_column('Users', 'tg_id',
               existing_type=sa.TEXT(),
               type_=sa.String(),
               existing_nullable=False)
    op.alter_column('Users', 'tg_username',
               existing_type=sa.TEXT(),
               type_=sa.String(),
               existing_nullable=True)
    op.alter_column('Users', 'first_name',
               existing_type=sa.TEXT(),
               type_=sa.String(),
               existing_nullable=True)
    op.alter_column('Users', 'last_name',
               existing_type=sa.TEXT(),
               type_=sa.String(),
               existing_nullable=True)
    op.drop_constraint(op.f('Users_unique_tg_id'), 'Users', type_='unique')
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_unique_constraint(op.f('Users_unique_tg_id'), 'Users', ['tg_id'])
    op.alter_column('Users', 'last_name',
               existing_type=sa.String(),
               type_=sa.TEXT(),
               existing_nullable=True)
    op.alter_column('Users', 'first_name',
               existing_type=sa.String(),
               type_=sa.TEXT(),
               existing_nullable=True)
    op.alter_column('Users', 'tg_username',
               existing_type=sa.String(),
               type_=sa.TEXT(),
               existing_nullable=True)
    op.alter_column('Users', 'tg_id',
               existing_type=sa.String(),
               type_=sa.TEXT(),
               existing_nullable=False)
    op.create_unique_constraint(op.f('Unique_tg_id_per_course'), 'Enrollments', ['tg_id', 'course_id'])
    op.alter_column('Enrollments', 'tg_id',
               existing_type=sa.String(),
               type_=sa.TEXT(),
               existing_nullable=False)
    op.create_table('Membership_granted',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('user_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('date_granted', sa.DATE(), autoincrement=False, nullable=False),
    sa.Column('days_granted', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('reason_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('contribution_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.PrimaryKeyConstraint('id', name=op.f('Membership_granted_pkey'))
    )
    op.create_table('Course',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('name', sa.TEXT(), autoincrement=False, nullable=False),
    sa.Column('description', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('date_start', sa.DATE(), autoincrement=False, nullable=True),
    sa.Column('date_end', sa.DATE(), autoincrement=False, nullable=True),
    sa.PrimaryKeyConstraint('id', name=op.f('Course_pkey'))
    )
    op.create_table('Contribution_type',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('contribution_type_name', sa.TEXT(), autoincrement=False, nullable=False),
    sa.Column('contribution_type_description', sa.TEXT(), autoincrement=False, nullable=True),
    sa.PrimaryKeyConstraint('id', name=op.f('Contribution_type_pkey'))
    )
    op.create_table('Membership_reasons',
    sa.Column('id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('name', sa.TEXT(), autoincrement=False, nullable=False),
    sa.Column('description', sa.TEXT(), autoincrement=False, nullable=True)
    )
    op.create_table('Contributions',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('user_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('course_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('contribution_type_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('date', sa.DATE(), autoincrement=False, nullable=False),
    sa.PrimaryKeyConstraint('id', name=op.f('Contributions_pkey'))
    )
    # ### end Alembic commands ###
